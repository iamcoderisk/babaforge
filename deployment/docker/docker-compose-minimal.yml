version: '3.8'

services:
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 4gb --maxmemory-policy allkeys-lru --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - emailer_network

  postgres:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: email_system
      POSTGRES_USER: emailer
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MAX_CONNECTIONS: 500
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - emailer_network

  api:
    image: sendbaba-smtp:latest
    command: python -m gunicorn -w 4 -b 0.0.0.0:5000 --timeout 300 run:app
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      - PORT=5000
      - FLASK_ENV=production
      - ENVIRONMENT=production
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=emailer
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=email_system
    depends_on:
      - redis
      - postgres
    networks:
      - emailer_network

  worker:
    image: sendbaba-smtp:latest
    command: python -m app.workers.email_worker
    environment:
      - ENVIRONMENT=docker
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=emailer
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=email_system
      - WORKER_CONCURRENCY=100
    depends_on:
      - redis
      - postgres
    deploy:
      replicas: 10
    networks:
      - emailer_network

volumes:
  redis_data:
  postgres_data:

networks:
  emailer_network:
    driver: bridge
